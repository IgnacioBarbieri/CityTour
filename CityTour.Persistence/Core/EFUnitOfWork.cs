using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Runtime.Remoting.Messaging;
using System.Text;
using System.Threading.Tasks;

namespace CityTour.Persistence.Core
{
    public class EFUnitOfWork : IEFUnitOfWork
    {
        private readonly DbContext dbContext;
        private bool disposed;

        public EFUnitOfWork(DbContext dbContext)
        {
            if (dbContext == null)
            {
                throw new ArgumentNullException(nameof(dbContext));
            }

            this.dbContext = dbContext;
        }

        public DbContext DBContext => dbContext;

        /// <inheritdoc />
        /// <summary>
        /// Commits the changes to database
        /// </summary>
        /// <autogeneratedoc />
        public void Commit()
        {
            
            dbContext.SaveChanges();
        }

        public async Task CommitAsync()
        {
            await dbContext.SaveChangesAsync();
        }


        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposning)
        {
            if (disposed)
                return;

            if (disposning)
            {
                dbContext.Dispose();
            }


            disposed = true;
        }

        ~EFUnitOfWork()
        {
            Dispose(false);
        }

    }
}
